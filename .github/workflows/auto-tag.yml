name: Auto Tag Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write

jobs:
  auto-tag:
    name: Create Release Tag
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from branch name
        id: extract_version
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION="${BRANCH_NAME#release/}"

          # Validate version format (e.g., 1.0.0 or v1.0.0)
          if [[ ! "$VERSION" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Invalid version format: $VERSION"
            echo "Expected format: release/1.0.0 or release/v1.0.0"
            exit 1
          fi

          # Ensure version starts with 'v'
          if [[ ! "$VERSION" =~ ^v ]]; then
            VERSION="v$VERSION"
          fi

          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Check if tag already exists
        id: check_tag
        run: |
          VERSION="${{ steps.extract_version.outputs.VERSION }}"
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag $VERSION already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag $VERSION does not exist"
          fi

      - name: Create and push tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          VERSION="${{ steps.extract_version.outputs.VERSION }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$VERSION" -m "Release $VERSION"
          git push origin "$VERSION"
          echo "Created and pushed tag: $VERSION"

      - name: Skip tag creation
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          VERSION="${{ steps.extract_version.outputs.VERSION }}"
          echo "Skipping tag creation - tag $VERSION already exists"