name: Claude Code

on:
  issue_comment:
    types: [created, edited]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
       contents: write
       pull-requests: write
       issues: write
       id-token: write
       actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
           fetch-depth: 0 # Full history for better context

      - name: Comment with GitHub Actions URL
        run: |
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            gh issue comment ${{ github.event.issue.number }} --body "Claude Code実行開始: $RUN_URL"
          elif [ "${{ github.event_name }}" = "issues" ]; then
            gh issue comment ${{ github.event.issue.number }} --body "Claude Code実行開始: $RUN_URL"
          elif [ "${{ github.event_name }}" = "pull_request_review_comment" ]; then
            gh pr comment ${{ github.event.pull_request.number }} --body "Claude Code実行開始: $RUN_URL"
          elif [ "${{ github.event_name }}" = "pull_request_review" ]; then
            gh pr comment ${{ github.event.pull_request.number }} --body "Claude Code実行開始: $RUN_URL"
          fi
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
           distribution: 'temurin'
           java-version: '21'
           cache: 'gradle'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
           path: |
             ~/.gradle/caches
             ~/.gradle/wrapper
           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
           restore-keys: |
             ${{ runner.os }}-gradle-

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read
            contents: write
            pull-requests: write
            issues: write
            id-token: write

          # Optional: Give a custom prompt to Claude. If this is not specified, Claude will perform the instructions specified in the comment that tagged it.
          prompt: |
            # KInfraプロジェクトでの作業

            ## プロジェクト概要
            このリポジトリはKotlinベースのTerraformラッパーで、Bitwarden Secret Manager統合によりシークレットを安全に管理します。
            コンテキストの情報をもとに作業を行なってください

            ## ビルド環境
            - Gradle 8.10.2
            - Java 21
            - Kotlin 2.2.0

            ビルドコマンド:
            ```bash
            ./gradlew build                                    # ビルド
            ./gradlew test                                     # 全テスト
            ./gradlew :app-cli:run --args="<cmd>"             # CLI実行
            ./gradlew :app-web:run                             # Web実行
            ./gradlew test --tests "net.kigawa.kinfra.Foo"    # 単一テスト
            ```

            ## 重要なルール
            1. **作業後はPRにを作成する。差分がない場合はコメントをする** - 実施した変更内容を日本語で簡潔に報告
            2. **CLAUDE.mdの指示に従う** - プロジェクトのコーディング規約とアーキテクチャガイドラインを遵守
            3. **テストを実行する** - 変更後は`./gradlew test`でテストが通ることを確認
            4. **日本語で応答する** - コメントとコミットメッセージは日本語を使用

            ## コンテキスト情報
            - **トリガーユーザー**: ${{ github.actor }}
            - **リポジトリ**: ${{ github.repository }}
            - **ベースブランチ**: ${{ github.base_ref }}
            - **ヘッドブランチ**: ${{ github.head_ref }}
            - **PR番号**: ${{ github.event.pull_request.number }}
            - **Issue番号**: ${{ github.event.issue.number }}
            - **PRタイトル**: ${{ github.event.pull_request.title }}
            - **PR説明**: ${{ github.event.pull_request.body }}
            - **コメント内容**: ${{ github.event.comment.body }}
            
            
            

          # Optional: Add claude_args to customize behavior and configuration
          # See https://github.com/anthropics/claude-code-action/blob/main/docs/usage.md
          # or https://docs.claude.com/en/docs/claude-code/cli-reference for available options
          claude_args: '--allowed-tools Bash(gh pr:*) Edit --dangerously-skip-permissions'

